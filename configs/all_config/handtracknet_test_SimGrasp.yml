# dirs
experiment_dir:  pretrained_handtracknet_SimGrasp
save_dir: htn_simgrasp_track

# data info
data_config: data_info_SimGrasp.yml    # name of the .yml file in data_config
obj_category: ['bottle_sim']
num_points: 512
hand_jitter_cfg:
    mano_scale: 0
    rand_scale: 0.01        # std for 'normal' and range for 'uniform'
    rand_type: normal       #'normal' or 'uniform'
obj_jitter_cfg:
    type: normal
    s: 0
    r: 0
    t: 0

track: hand   #['hand', 'hand_IKNet', 'obj_opt', False] False is for training 
pointnet_cfg:
    camera: pointnet2_camera_shallow1.yml
network:
    type: HandTrackNet
    handframe: kp
    backbone_out_dim: 384


# used in HandTrackModel in network/models/track_network.py
use_pred_obj_pose: False    
use_pred_hand_shape: False  
use_optimization: False
sdf_code_source: gt

# used in network/models/optimization_hand.py
opt:
    NetworkSpecs:
        dims: [ 512, 512, 512, 512, 512, 512, 512, 512 ]
        dropout : [0, 1, 2, 3, 4, 5, 6, 7]
        dropout_prob : 0.2
        norm_layers : [0, 1, 2, 3, 4, 5, 6, 7]
        latent_in : [4]
        xyz_in_all : False
        use_tanh : False
        latent_dropout : False
        weight_norm : True
    energy_weight:
        penetrate_sum_loss: 10
        sil_loss: 10
        attraction_loss: 5
        vis_regu_loss: 10
        invis_regu_loss: 0
        temporal_smooth: 1

# optimization options in learning network
batch_size: 1       # must set to 1 when tracking
total_epoch: 300
optimizer: Adam
weight_decay: 0.0001
warm_up: 0
learning_rate: 0.0001
lr_policy: step
lr_gamma: 0.5 # lr decay rate
lr_step_size: 20
lr_clip: 0.00001 # min lr
weight_init: xavier

# bn momentum adjustment
momentum_original: 0.1
momentum_decay: 0.5
momentum_step_size: 20  # = lr_step_size
momentum_min: 0.01

# save frequency
freq:
    save: 5

# device
cuda_id: 0


